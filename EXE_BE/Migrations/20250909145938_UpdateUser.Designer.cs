// <auto-generated />
using System;
using EXE_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EXE_BE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250909145938_UpdateUser")]
    partial class UpdateUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EXE_BE.Models.EnergyUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("integer");

                    b.Property<float>("CO2emission")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("electricityconsumption")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("EnergyUsages");
                });

            modelBuilder.Entity("EXE_BE.Models.FoodUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("integer");

                    b.Property<float>("CO2emission")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("score")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FoodUsages");
                });

            modelBuilder.Entity("EXE_BE.Models.ItemList.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodCategory")
                        .HasColumnType("integer");

                    b.Property<int>("FoodUsageId")
                        .HasColumnType("integer");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FoodUsageId");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("EXE_BE.Models.ItemList.PlasticItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PlasticCategory")
                        .HasColumnType("integer");

                    b.Property<int>("PlasticUsageId")
                        .HasColumnType("integer");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PlasticUsageId");

                    b.ToTable("PlasticItems");
                });

            modelBuilder.Entity("EXE_BE.Models.PlasticUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("integer");

                    b.Property<float>("CO2emission")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PlasticUsages");
                });

            modelBuilder.Entity("EXE_BE.Models.TrafficUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("integer");

                    b.Property<float>("CO2emission")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("distance")
                        .HasColumnType("real");

                    b.Property<int>("trafficCategory")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TrafficUsages");
                });

            modelBuilder.Entity("EXE_BE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EXE_BE.Models.UserActivities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EnergyUsageId")
                        .HasColumnType("integer");

                    b.Property<int>("FoodUsageId")
                        .HasColumnType("integer");

                    b.Property<int>("PlasticUsageId")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<int>("TrafficUsageId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnergyUsageId")
                        .IsUnique();

                    b.HasIndex("FoodUsageId")
                        .IsUnique();

                    b.HasIndex("PlasticUsageId")
                        .IsUnique();

                    b.HasIndex("TrafficUsageId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("EXE_BE.Models.ItemList.FoodItem", b =>
                {
                    b.HasOne("EXE_BE.Models.FoodUsage", null)
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodUsageId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("EXE_BE.Models.ItemList.PlasticItem", b =>
                {
                    b.HasOne("EXE_BE.Models.PlasticUsage", null)
                        .WithMany("PlasticItems")
                        .HasForeignKey("PlasticUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EXE_BE.Models.UserActivities", b =>
                {
                    b.HasOne("EXE_BE.Models.EnergyUsage", "EnergyUsage")
                        .WithOne("UserActivities")
                        .HasForeignKey("EXE_BE.Models.UserActivities", "EnergyUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EXE_BE.Models.FoodUsage", "FoodUsage")
                        .WithOne("UserActivities")
                        .HasForeignKey("EXE_BE.Models.UserActivities", "FoodUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EXE_BE.Models.PlasticUsage", "PlasticUsage")
                        .WithOne("UserActivities")
                        .HasForeignKey("EXE_BE.Models.UserActivities", "PlasticUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EXE_BE.Models.TrafficUsage", "TrafficUsage")
                        .WithOne("UserActivities")
                        .HasForeignKey("EXE_BE.Models.UserActivities", "TrafficUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EXE_BE.Models.User", "User")
                        .WithMany("UserActivities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnergyUsage");

                    b.Navigation("FoodUsage");

                    b.Navigation("PlasticUsage");

                    b.Navigation("TrafficUsage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EXE_BE.Models.EnergyUsage", b =>
                {
                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("EXE_BE.Models.FoodUsage", b =>
                {
                    b.Navigation("FoodItems");

                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("EXE_BE.Models.PlasticUsage", b =>
                {
                    b.Navigation("PlasticItems");

                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("EXE_BE.Models.TrafficUsage", b =>
                {
                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("EXE_BE.Models.User", b =>
                {
                    b.Navigation("UserActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
